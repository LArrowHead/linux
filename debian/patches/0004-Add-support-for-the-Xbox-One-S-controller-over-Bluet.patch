From a5bebc6e7d14e7d2f6fcde24850693959f25a131 Mon Sep 17 00:00:00 2001
From: "Pierre-Loup A. Griffais" <eduke32@plagman.net>
Date: Wed, 16 Nov 2016 17:17:09 -0800
Subject: [PATCH 4/9] Add support for the Xbox One S controller over Bluetooth

---
 drivers/hid/hid-core.c      |  1 +
 drivers/hid/hid-ids.h       |  2 ++
 drivers/hid/hid-microsoft.c | 38 ++++++++++++++++++++++++++++++++++++++
 net/bluetooth/l2cap_core.c  |  9 +++++++++
 4 files changed, 50 insertions(+)

diff --git a/drivers/hid/hid-core.c b/drivers/hid/hid-core.c
index d162f0d..0e5a531 100644
--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1984,6 +1984,7 @@ static const struct hid_device_id hid_have_special_driver[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_PRESENTER_8K_USB) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_DIGITAL_MEDIA_3K) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_WIRELESS_OPTICAL_DESKTOP_3_0) },
+	{ HID_BLUETOOTH_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_XBOX_ONE_S) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_OFFICE_KB) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_DIGITAL_MEDIA_7K) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_DIGITAL_MEDIA_600) },
diff --git a/drivers/hid/hid-ids.h b/drivers/hid/hid-ids.h
index d379386..c433e81 100644
--- a/drivers/hid/hid-ids.h
+++ b/drivers/hid/hid-ids.h
@@ -736,6 +736,8 @@
 #define USB_DEVICE_ID_MS_TOUCH_COVER_2   0x07a7
 #define USB_DEVICE_ID_MS_TYPE_COVER_2    0x07a9
 #define USB_DEVICE_ID_MS_POWER_COVER     0x07da
+#define USB_DEVICE_ID_MS_XBOX_ONE_S    0x02e0
+
 
 #define USB_VENDOR_ID_MOJO		0x8282
 #define USB_DEVICE_ID_RETRO_ADAPTER	0x3201
diff --git a/drivers/hid/hid-microsoft.c b/drivers/hid/hid-microsoft.c
index 96e7d32..6495742 100644
--- a/drivers/hid/hid-microsoft.c
+++ b/drivers/hid/hid-microsoft.c
@@ -28,6 +28,8 @@
 #define MS_RDESC		0x08
 #define MS_NOGET		0x10
 #define MS_DUPLICATE_USAGES	0x20
+#define MS_RDESC_3K		0x40
+#define MS_XBOX_ONE_S  0x80
 
 static __u8 *ms_report_fixup(struct hid_device *hdev, __u8 *rdesc,
 		unsigned int *rsize)
@@ -130,11 +132,43 @@ static int ms_presenter_8k_quirk(struct hid_input *hi, struct hid_usage *usage,
 	return 1;
 }
 
+static int ms_xbox_one_s_quirk(struct hid_input *hi, struct hid_usage *usage,
+							   unsigned long **bit, int *max)
+{
+	switch (usage->hid & HID_USAGE_PAGE) {
+		
+		case HID_UP_GENDESK:
+			if ((usage->hid & 0xf0) == 0x80) {      /* SystemControl */
+				switch (usage->hid & 0xf) {
+					case 0x5:
+						/* override the default mapping of KEY_MENU */
+						ms_map_key_clear(BTN_MODE);
+						return 1;
+					default:
+						break;
+				}
+				break;
+			}
+			break;
+			
+		default:
+			break;
+	}
+	
+	/* Let the normal mapping happen for everything else */
+	return 0;
+}
+
 static int ms_input_mapping(struct hid_device *hdev, struct hid_input *hi,
 		struct hid_field *field, struct hid_usage *usage,
 		unsigned long **bit, int *max)
 {
 	unsigned long quirks = (unsigned long)hid_get_drvdata(hdev);
+	
+	if (quirks & MS_XBOX_ONE_S) {
+		int ret = ms_xbox_one_s_quirk(hi, usage, bit, max);
+		return ret;
+	}
 
 	if (quirks & MS_ERGONOMY) {
 		int ret = ms_ergonomy_kb_quirk(hi, usage, bit, max);
@@ -281,6 +315,10 @@ static const struct hid_device_id ms_devices[] = {
 
 	{ HID_BLUETOOTH_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_PRESENTER_8K_BT),
 		.driver_data = MS_PRESENTER },
+		
+	{ HID_BLUETOOTH_DEVICE(USB_VENDOR_ID_MICROSOFT, USB_DEVICE_ID_MS_XBOX_ONE_S),
+		.driver_data = MS_XBOX_ONE_S },
+		
 	{ }
 };
 MODULE_DEVICE_TABLE(hid, ms_devices);
diff --git a/net/bluetooth/l2cap_core.c b/net/bluetooth/l2cap_core.c
index fc7f321..2d671ed 100644
--- a/net/bluetooth/l2cap_core.c
+++ b/net/bluetooth/l2cap_core.c
@@ -3214,6 +3214,14 @@ static int l2cap_build_conf_req(struct l2cap_chan *chan, void *data)
 
 	switch (chan->mode) {
 	case L2CAP_MODE_BASIC:
+	/* HACK FOR XBOX ONE S CONTROLLERS
+	 * If we add options to the configuration request, the
+	 * Xbox One S controller responds with:
+	 *   Result: Failure - unknown options (0x0003)
+	 * For now, just don't send configuration options.
+	 * Remove this hack once the controller supports it
+	 */
+#if 0
 		if (disable_ertm)
 			break;
 
@@ -3230,6 +3238,7 @@ static int l2cap_build_conf_req(struct l2cap_chan *chan, void *data)
 
 		l2cap_add_conf_opt(&ptr, L2CAP_CONF_RFC, sizeof(rfc),
 				   (unsigned long) &rfc);
+#endif
 		break;
 
 	case L2CAP_MODE_ERTM:
-- 
2.7.4

