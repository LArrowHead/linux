From 9ce4a25373d5e6812ca50124e43d7ae6af78ef81 Mon Sep 17 00:00:00 2001
From: John Vert <johnv@valvesoftware.com>
Date: Wed, 7 Jun 2017 14:51:24 -0700
Subject: [PATCH 9/9] fix bad logic in Sony LED suspend/resume path Thanks to
 @flibitijibibo for pointing out the problem.

---
 drivers/hid/hid-sony.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/hid/hid-sony.c b/drivers/hid/hid-sony.c
index 740996f..155d548 100644
--- a/drivers/hid/hid-sony.c
+++ b/drivers/hid/hid-sony.c
@@ -2740,8 +2740,8 @@ static int sony_suspend(struct hid_device *hdev, pm_message_t message)
 	 * On suspend save the current LED state,
 	 * stop running force-feedback and blank the LEDS.
 	 */
-	if (SONY_LED_SUPPORT || SONY_FF_SUPPORT) {
-		struct sony_sc *sc = hid_get_drvdata(hdev);
+	struct sony_sc *sc = hid_get_drvdata(hdev);
+	if (sc->quirks & (SONY_LED_SUPPORT | SONY_FF_SUPPORT)) {
 
 #ifdef CONFIG_SONY_FF
 		sc->left = sc->right = 0;
@@ -2760,8 +2760,8 @@ static int sony_suspend(struct hid_device *hdev, pm_message_t message)
 static int sony_resume(struct hid_device *hdev)
 {
 	/* Restore the state of controller LEDs on resume */
-	if (SONY_LED_SUPPORT) {
-		struct sony_sc *sc = hid_get_drvdata(hdev);
+	struct sony_sc *sc = hid_get_drvdata(hdev);
+	if (sc->quirks & SONY_LED_SUPPORT) {
 
 		memcpy(sc->led_state, sc->resume_led_state,
 			sizeof(sc->led_state));
-- 
2.7.4

